<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGRm0KRwct38cHLekHBy3pBwc
        tn4aGrkoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkJLYOGhq5pBoawP4ZGcb/GBjI/xgY
        yP8ZGcb/GhrA/hsbuaMUFLENAAAAAAAAAAAAAAAAAAAAAAAAAAAgIK8QHBy83RgYx/8YGMn/JSXM/1NT
        1v9TU9b/JSXM/xgYyf8ZGcj/Gxu93CIiuw8AAAAAAAAAAAAAAAAAAAAAGhq9uRgYyP8ZGcn/hYXh/7Ky
        6/9xcdz/cXHc/7Oz6/+Dg+D/GRnJ/xgYyP8aGr63AAAAAAAAAAAAAAAAHR25LBkZxv8YGMn/i4vi/3x8
        3/+Pj+P/5+f2/+fn9v+Pj+P/fX3f/4eH4f8YGMn/GRnG/xkZuykAAAAAAAAAABoawaAYGMn/KSnN/7Oz
        6/+Pj+P/9/f3//b29v/s7Oz/7+/v/46O4v+ysuv/JyfN/xgYyf8ZGb6cAAAAAAAAAAAZGcTiGBjJ/1lZ
        1/94eN7/5OT1/8LCwv+2trb/ZmZm/6Ojo//j4/X/cHDc/1dX1/8YGMn/GBjF3AAAAAAAAAAAGBjH6RgY
        yf9YWNf/e3vf/+Pj9f+VlZX/tra2/7q6uv98fHz/4+P1/3Fx3P9WVtf/GBjJ/xgYxugAAAAAAAAAABoa
        xrQYGMn/KSnN/7Oz6/+Pj+P/5OTk/+Tk5P/Pz8//3d3d/46O4v+ysuv/JyfN/xgYyf8XF8avAAAAAAAA
        AAAWFs0uGBjI/hgYyf+Li+L/fHzf/4+P4//f3/T/39/0/4+P4/99fd//h4fh/xgYyf8YGMn+FxfLLAAA
        AAAAAAAAAAAAABkZxrgYGMn/GRnJ/4WF4f+zs+v/d3fe/3d33v+0tOv/g4Pg/xkZyf8YGMn/GhrItAAA
        AAAAAAAAAAAAAAAAAAAgIM8QGBjH0hgYyP8YGMn/JSXM/1NT1v9TU9b/JSXM/xgYyf8YGMn/GBjH0hER
        zA8AAAAAAAAAAAAAAAAAAAAAAAAAABISyA4XF8qjFxfJ7xgYyf4YGMn/GBjJ/xgYyP4XF8nvFhbJoBQU
        xA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkZxykYGMl/FxfJpBcXyaQYGMh+GhrMKAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD+fwAA8A8AAOAHAADAAwAAwAMAAIABAACAAQAAgAEAAIAB
        AADAAwAAwAMAAOAHAADwDwAA/n8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAfH7gZGxu4LxsbtkIbG7ZCHBy3LiAgtRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABwcuCQcHLeHHBy31Bwct/8cHLf/HBy3/xwct/8cHLf/HBy3/xwcttMcHLeHHR22IwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABoasxQcHLeUHBy3+hsbu/8aGsD/GRnE/xkZx/8YGMj/GBjI/xkZx/8ZGcT/Ghq//xsb
        uv8cHLf5HBy3khsbvBMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAbG7UwHBy33Rsbu/8ZGcX/GBjJ/xgYyf8YGMn/GBjJ/xgYyf8YGMn/GBjJ/xgY
        yf8YGMn/GBjJ/xkZxP8bG7z/HBy33Bwcty4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAHBy3Uhwct/gaGsD/GBjI/xgYyf8YGMn/GBjJ/xgYyf8YGMn/GBjJ/xgY
        yf8YGMn/GBjJ/xgYyf8YGMn/GBjJ/xgYyf8aGsH/HBy4+B0dtlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4euTMbG7n1GRnG/xgYyf8YGMn/GBjJ/xgYyf8bG8r/UlLW/46O
        4v+pqen/qanp/42N4v9RUdb/GxvK/xgYyf8YGMn/GBjJ/xgYyf8ZGcf/HBy59BoauDIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHLgSGxu66xgYxv8YGMn/GBjJ/xgYyf8YGMn/aGja/97e
        9P/6+vr/2trz/8HB7f/Cwu7/2trz//r6+v/c3PT/Zmba/xgYyf8YGMn/GBjJ/xgYyf8YGMb/Gxu56SAg
        rxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0duI8ZGcT/GBjJ/xgYyf8YGMn/HR3K/6Wl
        6P/19fn/mprl/zU1z/8YGMn/GBjJ/xgYyf8YGMn/NzfP/5yc5v/29vn/o6Pn/x0dyv8YGMn/GBjJ/xgY
        yf8ZGcT/Gxu2jAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdHbYjGxu+/RgYyf8YGMn/GBjJ/xgY
        yf+np+j/7Oz3/1RU1v8dHcr/dHTd/8zM8P/09Pn/9PT5/8vL8P9zc93/HR3K/1ZW1//t7ff/paXo/xgY
        yf8YGMn/GBjJ/xgYyf8aGr79Hx+5IQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4euX8YGMf/GBjJ/xgY
        yf8YGMn/a2vb//b2+f9WVtf/Ly/O/8/P8f/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/OzvD/Ly/O/1dX
        1//39/n/aGja/xgYyf8YGMn/GBjJ/xkZx/8dHbl7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGhq/5xgY
        yf8YGMn/GBjJ/x0dyv/h4fX/n5/m/x4eyv/R0fH/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6
        +v/Q0PH/HR3K/6Gh5//f3/T/HBzK/xgYyf8YGMn/GBjJ/xoavuQAAAAAAAAAAAAAAAAAAAAAAAAAABcX
        uQsZGcT/GBjJ/xgYyf8YGMn/VVXW//r6+v83N8//d3fe//r6+v/6+vr/6urq/+jo6P/6+vr/4uLi/93d
        3f/d3d3/6enp//r6+v91dd3/OTnQ//r6+v9SUtb/GBjJ/xgYyf8YGMn/GRnF/hwcqgkAAAAAAAAAAAAA
        AAAAAAAAGBi3NRgYyf8YGMn/GBjJ/xgYyf+NjeL/1tby/xgYyf/Ly/D/+vr6//r6+v+Li4v/cnJy//r6
        +v9TU1P/Ly8v/1tbW/+hoaH/+vr6/8jI7/8YGMn/2Njz/4uL4v8YGMn/GBjJ/xgYyf8YGMj/Ghq4MgAA
        AAAAAAAAAAAAAAAAAAAaGsOUGBjJ/xgYyf8YGMn/GBjJ/6Wl6P+5uez/GBjJ//Dw+P/6+vr/+vr6/4uL
        i/9ycnL/+vr6/+Tk5P9ERET/srKy//r6+v/6+vr/7u73/xgYyf+6uuz/pKTn/xgYyf8YGMn/GBjJ/xgY
        yf8bG8WMAAAAAAAAAAAAAAAAAAAAABcXx4MYGMn/GBjJ/xgYyf8YGMn/pKTn/7m57P8YGMn/8PD4//r6
        +v/6+vr/i4uL/3Jycv/6+vr/+vr6/+Dg4P8zMzP/1tbW//r6+v/u7vf/GBjJ/7q67P+jo+f/GBjJ/xgY
        yf8YGMn/GBjJ/xgYxoIAAAAAAAAAAAAAAAAAAAAAFhbGOhgYyf8YGMn/GBjJ/xgYyf+NjeL/1tby/xgY
        yf/MzPD/+vr6/4yMjP9GRkb/cnJy//r6+v9bW1v/paWl/0ZGRv+oqKj/+vr6/8nJ7/8YGMn/2dnz/4qK
        4f8YGMn/GBjJ/xgYyf8YGMn/ExPDNwAAAAAAAAAAAAAAAAAAAAAUFMQNGBjI/BgYyf8YGMn/GBjJ/1VV
        1v/6+vr/NzfP/3x83//6+vr/7u7u/6ampv+bm5v/+vr6/83Nzf9paWn/enp6/+7u7v/6+vr/e3vf/zk5
        0P/6+vr/UlLW/xgYyf8YGMn/GBjJ/xcXyfsXF9ELAAAAAAAAAAAAAAAAAAAAAAAAAAAZGcfeGBjJ/xgY
        yf8YGMn/HR3K/+Hh9f+fn+b/Hx/L/9HR8f/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6/9DQ
        8f8eHsr/oaHn/9/f9P8cHMr/GBjJ/xgYyf8YGMn/GhrH3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsb
        yIIYGMn/GBjJ/xgYyf8YGMn/a2vb//b2+f9WVtf/Ly/O/8/P8f/6+vr/+vr6//r6+v/6+vr/+vr6//r6
        +v/OzvD/Ly/O/1dX1//39/n/aGja/xgYyf8YGMn/GBjJ/xgYyf8dHcp9AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAFhbMIxkZyekYGMn/GBjJ/xgYyf8YGMn/p6fo/+zs9/9UVNb/HR3K/3R03f/MzPD/6+v2/+vr
        9v/Ly/D/c3Pd/x0dyv9WVtf/7e33/6Wl6P8YGMn/GBjJ/xgYyf8YGMn/GBjH6BcXySEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAGBjNkxgYx/wYGMn/GBjJ/xgYyf8dHcr/paXo//X1+f+amuX/NTXP/xgY
        yf8YGMn/GBjJ/xgYyf83N8//nJzm//b2+f+jo+f/HR3K/xgYyf8YGMn/GBjJ/xcXyPsZGcqQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHMYSFxfL4BgYyf4YGMn/GBjJ/xgYyf8YGMn/aGja/97e
        9P/6+vr/2trz/8HB7f/Cwu7/2trz//r6+v/c3PT/Zmba/xgYyf8YGMn/GBjJ/xgYyf8YGMr+FxfI4CAg
        zxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFso6GBjK5RgYyf4YGMn/GBjJ/xgY
        yf8YGMn/GxvK/1JS1v+OjuL/qanp/6mp6f+NjeL/UVHW/xsbyv8YGMn/GBjJ/xgYyf8YGMn/GBjI/hkZ
        yeQXF8c3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGcpSFxfI8BkZ
        yPYYGMn/GBjJ/xgYyf8YGMn/GBjJ/xgYyf8YGMn/GBjJ/xgYyf8YGMn/GBjJ/xgYyf8YGMn/GBjJ/xkZ
        yPYXF8rwGhrJUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAXF8lCGBjJ6hgYyOYYGMn+GBjJ/xgYyf8YGMn/GBjJ/xgYyf8YGMn/GBjJ/xgYyf8YGMn/GBjJ/xgY
        yf0XF8jlGBjJ6hgYyEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAaGswUGBjKlBgYyfoYGMjlGRnI7hgYyPwYGMj+GBjJ/xgYyf8YGMj+GBjI/BkZ
        yO4YGMjlGBjJ+RgYyZIbG8kTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRXGJBkZyIcYGMnUGBjJ/xgYyf8YGMn/GBjJ/xgY
        yf8YGMn/GBjJ0xkZyIcWFswjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFMwZFhbJLxcX
        yUIXF8lCFhbILhUVyhgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/////////////////gB///gAH//wAA//4AAH/8AAA/+AAAH/AA
        AA/wAAAP8AAAD+AAAAfgAAAH4AAAB8AAAAPAAAAD4AAAB+AAAAfgAAAH4AAAD/AAAA/wAAAP+AAAH/wA
        AD/+AAB//wAA//+AAf//4Af/////////////////
</value>
  </data>
</root>